{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///node_modules/moment/locale sync ^\\.\\/.*$","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/app/pipes/filter-states.pipe.ts","webpack:///src/app/app/pipes/order-states.pipe.ts","webpack:///src/app/author-list/author-detail/author-detail.component.ts","webpack:///src/app/author-list/author-detail/author-detail.component.html","webpack:///src/app/author-list/author-list.component.ts","webpack:///src/app/author-list/author-list.component.html","webpack:///src/app/author-list/panel/panel.component.ts","webpack:///src/app/author-list/panel/panel.component.html","webpack:///src/app/conact-form/conact-form.component.ts","webpack:///src/app/conact-form/conact-form.component.html","webpack:///src/app/course/course.component.ts","webpack:///src/app/course/course.component.html","webpack:///src/app/covid-status/covid-status.component.ts","webpack:///src/app/covid-status/covid-status.component.html","webpack:///src/app/form-array/form-array.component.ts","webpack:///src/app/form-array/form-array.component.html","webpack:///src/app/form-builder/form-builder.component.ts","webpack:///src/app/form-builder/form-builder.component.html","webpack:///src/app/http-services/Errors/AppError.ts","webpack:///src/app/http-services/Errors/app-error-handler.ts","webpack:///src/app/http-services/Errors/not-found-error.ts","webpack:///src/app/http-services/posts/count-panel/count-panel.component.ts","webpack:///src/app/http-services/posts/count-panel/count-panel.component.html","webpack:///src/app/http-services/posts/posts.component.ts","webpack:///src/app/http-services/posts/posts.component.html","webpack:///src/app/http-services/posts/services/covid.service.ts","webpack:///src/app/http-services/posts/services/data.service.ts","webpack:///src/app/input-format.directive.ts","webpack:///src/app/models/author.model.ts","webpack:///src/app/reset-password/password.validator.ts","webpack:///src/app/reset-password/reset-password.component.ts","webpack:///src/app/reset-password/reset-password.component.html","webpack:///src/app/services/author.service.ts","webpack:///src/app/signup/signup.component.ts","webpack:///src/app/signup/signup.component.html","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","map","webpackContext","webpackContextResolve","__webpack_require__","o","webpackContextKeys","Object","AppComponent","post","title","isFavorite","selector","templateUrl","styleUrls","AppModule","provide","useClass","forRoot","path","component","declarations","imports","providers","bootstrap","FilterStatesPipe","states","filter","state","stateCode","name","OrderStatesPipe","_states","sort","a","b","stateName","AuthorDetailComponent","change","courses","emit","author","authorName","AuthorListComponent","authorService","viewMode","authors","getAuthors","eventArgs","console","log","mode","changeViewMode","PanelComponent","ConactFormComponent","contactMethods","firstName","form","onSubmit","CourseComponent","categories","c","f","CovidStatusComponent","FormArrayComponent","topics","topic","push","value","index","controls","indexOf","removeAt","get","addTopic","FormBuilderComponent","fb","group","required","contact","email","phone","array","AppError","originalError","AppErrorHandler","error","alert","NotFoundError","CountPanelComponent","PostsComponent","covidService","mainViewMode","consolidatedViewMode","getConsolidateData","subscribe","response","nationStatus","stateSelected","find","x","districts","getSorted","totalStatus","active","getTotalActiveCases","deceased","getTotalDeceasedCases","recovered","getTotalRecoveredCases","total","getTotalCases","status","length","forEach","newStatus","confirmed","getStateStatus","changeMainViewMode","CovidService","http","_districts","_ditrictNewStatus","_stateStatus","_nationalStatus","_newStatus","_nationStatus","pipe","districtData","district","delta","districtName","statecode","newCase","getConsolidatedDataSorted","errorHandler","providedIn","DataService","url","InputFormatDirective","el","nativeElement","format","toLowerCase","toUpperCase","Author","authorId","imgPath","dob","PasswordValidators","control","UniquePassword","newPassword","confirmPassword","matchPassword","ResetPasswordComponent","oldPassword","validator","MatchPassword","AuthorService","SignupComponent","account","userName","password","setErrors","invalidLogin","login","environment","production","bootstrapModule","err"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","var map = {\n\t\"./af\": \"./node_modules/moment/locale/af.js\",\n\t\"./af.js\": \"./node_modules/moment/locale/af.js\",\n\t\"./ar\": \"./node_modules/moment/locale/ar.js\",\n\t\"./ar-dz\": \"./node_modules/moment/locale/ar-dz.js\",\n\t\"./ar-dz.js\": \"./node_modules/moment/locale/ar-dz.js\",\n\t\"./ar-kw\": \"./node_modules/moment/locale/ar-kw.js\",\n\t\"./ar-kw.js\": \"./node_modules/moment/locale/ar-kw.js\",\n\t\"./ar-ly\": \"./node_modules/moment/locale/ar-ly.js\",\n\t\"./ar-ly.js\": \"./node_modules/moment/locale/ar-ly.js\",\n\t\"./ar-ma\": \"./node_modules/moment/locale/ar-ma.js\",\n\t\"./ar-ma.js\": \"./node_modules/moment/locale/ar-ma.js\",\n\t\"./ar-sa\": \"./node_modules/moment/locale/ar-sa.js\",\n\t\"./ar-sa.js\": \"./node_modules/moment/locale/ar-sa.js\",\n\t\"./ar-tn\": \"./node_modules/moment/locale/ar-tn.js\",\n\t\"./ar-tn.js\": \"./node_modules/moment/locale/ar-tn.js\",\n\t\"./ar.js\": \"./node_modules/moment/locale/ar.js\",\n\t\"./az\": \"./node_modules/moment/locale/az.js\",\n\t\"./az.js\": \"./node_modules/moment/locale/az.js\",\n\t\"./be\": \"./node_modules/moment/locale/be.js\",\n\t\"./be.js\": \"./node_modules/moment/locale/be.js\",\n\t\"./bg\": \"./node_modules/moment/locale/bg.js\",\n\t\"./bg.js\": \"./node_modules/moment/locale/bg.js\",\n\t\"./bm\": \"./node_modules/moment/locale/bm.js\",\n\t\"./bm.js\": \"./node_modules/moment/locale/bm.js\",\n\t\"./bn\": \"./node_modules/moment/locale/bn.js\",\n\t\"./bn.js\": \"./node_modules/moment/locale/bn.js\",\n\t\"./bo\": \"./node_modules/moment/locale/bo.js\",\n\t\"./bo.js\": \"./node_modules/moment/locale/bo.js\",\n\t\"./br\": \"./node_modules/moment/locale/br.js\",\n\t\"./br.js\": \"./node_modules/moment/locale/br.js\",\n\t\"./bs\": \"./node_modules/moment/locale/bs.js\",\n\t\"./bs.js\": \"./node_modules/moment/locale/bs.js\",\n\t\"./ca\": \"./node_modules/moment/locale/ca.js\",\n\t\"./ca.js\": \"./node_modules/moment/locale/ca.js\",\n\t\"./cs\": \"./node_modules/moment/locale/cs.js\",\n\t\"./cs.js\": \"./node_modules/moment/locale/cs.js\",\n\t\"./cv\": \"./node_modules/moment/locale/cv.js\",\n\t\"./cv.js\": \"./node_modules/moment/locale/cv.js\",\n\t\"./cy\": \"./node_modules/moment/locale/cy.js\",\n\t\"./cy.js\": \"./node_modules/moment/locale/cy.js\",\n\t\"./da\": \"./node_modules/moment/locale/da.js\",\n\t\"./da.js\": \"./node_modules/moment/locale/da.js\",\n\t\"./de\": \"./node_modules/moment/locale/de.js\",\n\t\"./de-at\": \"./node_modules/moment/locale/de-at.js\",\n\t\"./de-at.js\": \"./node_modules/moment/locale/de-at.js\",\n\t\"./de-ch\": \"./node_modules/moment/locale/de-ch.js\",\n\t\"./de-ch.js\": \"./node_modules/moment/locale/de-ch.js\",\n\t\"./de.js\": \"./node_modules/moment/locale/de.js\",\n\t\"./dv\": \"./node_modules/moment/locale/dv.js\",\n\t\"./dv.js\": \"./node_modules/moment/locale/dv.js\",\n\t\"./el\": \"./node_modules/moment/locale/el.js\",\n\t\"./el.js\": \"./node_modules/moment/locale/el.js\",\n\t\"./en-au\": \"./node_modules/moment/locale/en-au.js\",\n\t\"./en-au.js\": \"./node_modules/moment/locale/en-au.js\",\n\t\"./en-ca\": \"./node_modules/moment/locale/en-ca.js\",\n\t\"./en-ca.js\": \"./node_modules/moment/locale/en-ca.js\",\n\t\"./en-gb\": \"./node_modules/moment/locale/en-gb.js\",\n\t\"./en-gb.js\": \"./node_modules/moment/locale/en-gb.js\",\n\t\"./en-ie\": \"./node_modules/moment/locale/en-ie.js\",\n\t\"./en-ie.js\": \"./node_modules/moment/locale/en-ie.js\",\n\t\"./en-il\": \"./node_modules/moment/locale/en-il.js\",\n\t\"./en-il.js\": \"./node_modules/moment/locale/en-il.js\",\n\t\"./en-in\": \"./node_modules/moment/locale/en-in.js\",\n\t\"./en-in.js\": \"./node_modules/moment/locale/en-in.js\",\n\t\"./en-nz\": \"./node_modules/moment/locale/en-nz.js\",\n\t\"./en-nz.js\": \"./node_modules/moment/locale/en-nz.js\",\n\t\"./en-sg\": \"./node_modules/moment/locale/en-sg.js\",\n\t\"./en-sg.js\": \"./node_modules/moment/locale/en-sg.js\",\n\t\"./eo\": \"./node_modules/moment/locale/eo.js\",\n\t\"./eo.js\": \"./node_modules/moment/locale/eo.js\",\n\t\"./es\": \"./node_modules/moment/locale/es.js\",\n\t\"./es-do\": \"./node_modules/moment/locale/es-do.js\",\n\t\"./es-do.js\": \"./node_modules/moment/locale/es-do.js\",\n\t\"./es-us\": \"./node_modules/moment/locale/es-us.js\",\n\t\"./es-us.js\": \"./node_modules/moment/locale/es-us.js\",\n\t\"./es.js\": \"./node_modules/moment/locale/es.js\",\n\t\"./et\": \"./node_modules/moment/locale/et.js\",\n\t\"./et.js\": \"./node_modules/moment/locale/et.js\",\n\t\"./eu\": \"./node_modules/moment/locale/eu.js\",\n\t\"./eu.js\": \"./node_modules/moment/locale/eu.js\",\n\t\"./fa\": \"./node_modules/moment/locale/fa.js\",\n\t\"./fa.js\": \"./node_modules/moment/locale/fa.js\",\n\t\"./fi\": \"./node_modules/moment/locale/fi.js\",\n\t\"./fi.js\": \"./node_modules/moment/locale/fi.js\",\n\t\"./fil\": \"./node_modules/moment/locale/fil.js\",\n\t\"./fil.js\": \"./node_modules/moment/locale/fil.js\",\n\t\"./fo\": \"./node_modules/moment/locale/fo.js\",\n\t\"./fo.js\": \"./node_modules/moment/locale/fo.js\",\n\t\"./fr\": \"./node_modules/moment/locale/fr.js\",\n\t\"./fr-ca\": \"./node_modules/moment/locale/fr-ca.js\",\n\t\"./fr-ca.js\": \"./node_modules/moment/locale/fr-ca.js\",\n\t\"./fr-ch\": \"./node_modules/moment/locale/fr-ch.js\",\n\t\"./fr-ch.js\": \"./node_modules/moment/locale/fr-ch.js\",\n\t\"./fr.js\": \"./node_modules/moment/locale/fr.js\",\n\t\"./fy\": \"./node_modules/moment/locale/fy.js\",\n\t\"./fy.js\": \"./node_modules/moment/locale/fy.js\",\n\t\"./ga\": \"./node_modules/moment/locale/ga.js\",\n\t\"./ga.js\": \"./node_modules/moment/locale/ga.js\",\n\t\"./gd\": \"./node_modules/moment/locale/gd.js\",\n\t\"./gd.js\": \"./node_modules/moment/locale/gd.js\",\n\t\"./gl\": \"./node_modules/moment/locale/gl.js\",\n\t\"./gl.js\": \"./node_modules/moment/locale/gl.js\",\n\t\"./gom-deva\": \"./node_modules/moment/locale/gom-deva.js\",\n\t\"./gom-deva.js\": \"./node_modules/moment/locale/gom-deva.js\",\n\t\"./gom-latn\": \"./node_modules/moment/locale/gom-latn.js\",\n\t\"./gom-latn.js\": \"./node_modules/moment/locale/gom-latn.js\",\n\t\"./gu\": \"./node_modules/moment/locale/gu.js\",\n\t\"./gu.js\": \"./node_modules/moment/locale/gu.js\",\n\t\"./he\": \"./node_modules/moment/locale/he.js\",\n\t\"./he.js\": \"./node_modules/moment/locale/he.js\",\n\t\"./hi\": \"./node_modules/moment/locale/hi.js\",\n\t\"./hi.js\": \"./node_modules/moment/locale/hi.js\",\n\t\"./hr\": \"./node_modules/moment/locale/hr.js\",\n\t\"./hr.js\": \"./node_modules/moment/locale/hr.js\",\n\t\"./hu\": \"./node_modules/moment/locale/hu.js\",\n\t\"./hu.js\": \"./node_modules/moment/locale/hu.js\",\n\t\"./hy-am\": \"./node_modules/moment/locale/hy-am.js\",\n\t\"./hy-am.js\": \"./node_modules/moment/locale/hy-am.js\",\n\t\"./id\": \"./node_modules/moment/locale/id.js\",\n\t\"./id.js\": \"./node_modules/moment/locale/id.js\",\n\t\"./is\": \"./node_modules/moment/locale/is.js\",\n\t\"./is.js\": \"./node_modules/moment/locale/is.js\",\n\t\"./it\": \"./node_modules/moment/locale/it.js\",\n\t\"./it-ch\": \"./node_modules/moment/locale/it-ch.js\",\n\t\"./it-ch.js\": \"./node_modules/moment/locale/it-ch.js\",\n\t\"./it.js\": \"./node_modules/moment/locale/it.js\",\n\t\"./ja\": \"./node_modules/moment/locale/ja.js\",\n\t\"./ja.js\": \"./node_modules/moment/locale/ja.js\",\n\t\"./jv\": \"./node_modules/moment/locale/jv.js\",\n\t\"./jv.js\": \"./node_modules/moment/locale/jv.js\",\n\t\"./ka\": \"./node_modules/moment/locale/ka.js\",\n\t\"./ka.js\": \"./node_modules/moment/locale/ka.js\",\n\t\"./kk\": \"./node_modules/moment/locale/kk.js\",\n\t\"./kk.js\": \"./node_modules/moment/locale/kk.js\",\n\t\"./km\": \"./node_modules/moment/locale/km.js\",\n\t\"./km.js\": \"./node_modules/moment/locale/km.js\",\n\t\"./kn\": \"./node_modules/moment/locale/kn.js\",\n\t\"./kn.js\": \"./node_modules/moment/locale/kn.js\",\n\t\"./ko\": \"./node_modules/moment/locale/ko.js\",\n\t\"./ko.js\": \"./node_modules/moment/locale/ko.js\",\n\t\"./ku\": \"./node_modules/moment/locale/ku.js\",\n\t\"./ku.js\": \"./node_modules/moment/locale/ku.js\",\n\t\"./ky\": \"./node_modules/moment/locale/ky.js\",\n\t\"./ky.js\": \"./node_modules/moment/locale/ky.js\",\n\t\"./lb\": \"./node_modules/moment/locale/lb.js\",\n\t\"./lb.js\": \"./node_modules/moment/locale/lb.js\",\n\t\"./lo\": \"./node_modules/moment/locale/lo.js\",\n\t\"./lo.js\": \"./node_modules/moment/locale/lo.js\",\n\t\"./lt\": \"./node_modules/moment/locale/lt.js\",\n\t\"./lt.js\": \"./node_modules/moment/locale/lt.js\",\n\t\"./lv\": \"./node_modules/moment/locale/lv.js\",\n\t\"./lv.js\": \"./node_modules/moment/locale/lv.js\",\n\t\"./me\": \"./node_modules/moment/locale/me.js\",\n\t\"./me.js\": \"./node_modules/moment/locale/me.js\",\n\t\"./mi\": \"./node_modules/moment/locale/mi.js\",\n\t\"./mi.js\": \"./node_modules/moment/locale/mi.js\",\n\t\"./mk\": \"./node_modules/moment/locale/mk.js\",\n\t\"./mk.js\": \"./node_modules/moment/locale/mk.js\",\n\t\"./ml\": \"./node_modules/moment/locale/ml.js\",\n\t\"./ml.js\": \"./node_modules/moment/locale/ml.js\",\n\t\"./mn\": \"./node_modules/moment/locale/mn.js\",\n\t\"./mn.js\": \"./node_modules/moment/locale/mn.js\",\n\t\"./mr\": \"./node_modules/moment/locale/mr.js\",\n\t\"./mr.js\": \"./node_modules/moment/locale/mr.js\",\n\t\"./ms\": \"./node_modules/moment/locale/ms.js\",\n\t\"./ms-my\": \"./node_modules/moment/locale/ms-my.js\",\n\t\"./ms-my.js\": \"./node_modules/moment/locale/ms-my.js\",\n\t\"./ms.js\": \"./node_modules/moment/locale/ms.js\",\n\t\"./mt\": \"./node_modules/moment/locale/mt.js\",\n\t\"./mt.js\": \"./node_modules/moment/locale/mt.js\",\n\t\"./my\": \"./node_modules/moment/locale/my.js\",\n\t\"./my.js\": \"./node_modules/moment/locale/my.js\",\n\t\"./nb\": \"./node_modules/moment/locale/nb.js\",\n\t\"./nb.js\": \"./node_modules/moment/locale/nb.js\",\n\t\"./ne\": \"./node_modules/moment/locale/ne.js\",\n\t\"./ne.js\": \"./node_modules/moment/locale/ne.js\",\n\t\"./nl\": \"./node_modules/moment/locale/nl.js\",\n\t\"./nl-be\": \"./node_modules/moment/locale/nl-be.js\",\n\t\"./nl-be.js\": \"./node_modules/moment/locale/nl-be.js\",\n\t\"./nl.js\": \"./node_modules/moment/locale/nl.js\",\n\t\"./nn\": \"./node_modules/moment/locale/nn.js\",\n\t\"./nn.js\": \"./node_modules/moment/locale/nn.js\",\n\t\"./oc-lnc\": \"./node_modules/moment/locale/oc-lnc.js\",\n\t\"./oc-lnc.js\": \"./node_modules/moment/locale/oc-lnc.js\",\n\t\"./pa-in\": \"./node_modules/moment/locale/pa-in.js\",\n\t\"./pa-in.js\": \"./node_modules/moment/locale/pa-in.js\",\n\t\"./pl\": \"./node_modules/moment/locale/pl.js\",\n\t\"./pl.js\": \"./node_modules/moment/locale/pl.js\",\n\t\"./pt\": \"./node_modules/moment/locale/pt.js\",\n\t\"./pt-br\": \"./node_modules/moment/locale/pt-br.js\",\n\t\"./pt-br.js\": \"./node_modules/moment/locale/pt-br.js\",\n\t\"./pt.js\": \"./node_modules/moment/locale/pt.js\",\n\t\"./ro\": \"./node_modules/moment/locale/ro.js\",\n\t\"./ro.js\": \"./node_modules/moment/locale/ro.js\",\n\t\"./ru\": \"./node_modules/moment/locale/ru.js\",\n\t\"./ru.js\": \"./node_modules/moment/locale/ru.js\",\n\t\"./sd\": \"./node_modules/moment/locale/sd.js\",\n\t\"./sd.js\": \"./node_modules/moment/locale/sd.js\",\n\t\"./se\": \"./node_modules/moment/locale/se.js\",\n\t\"./se.js\": \"./node_modules/moment/locale/se.js\",\n\t\"./si\": \"./node_modules/moment/locale/si.js\",\n\t\"./si.js\": \"./node_modules/moment/locale/si.js\",\n\t\"./sk\": \"./node_modules/moment/locale/sk.js\",\n\t\"./sk.js\": \"./node_modules/moment/locale/sk.js\",\n\t\"./sl\": \"./node_modules/moment/locale/sl.js\",\n\t\"./sl.js\": \"./node_modules/moment/locale/sl.js\",\n\t\"./sq\": \"./node_modules/moment/locale/sq.js\",\n\t\"./sq.js\": \"./node_modules/moment/locale/sq.js\",\n\t\"./sr\": \"./node_modules/moment/locale/sr.js\",\n\t\"./sr-cyrl\": \"./node_modules/moment/locale/sr-cyrl.js\",\n\t\"./sr-cyrl.js\": \"./node_modules/moment/locale/sr-cyrl.js\",\n\t\"./sr.js\": \"./node_modules/moment/locale/sr.js\",\n\t\"./ss\": \"./node_modules/moment/locale/ss.js\",\n\t\"./ss.js\": \"./node_modules/moment/locale/ss.js\",\n\t\"./sv\": \"./node_modules/moment/locale/sv.js\",\n\t\"./sv.js\": \"./node_modules/moment/locale/sv.js\",\n\t\"./sw\": \"./node_modules/moment/locale/sw.js\",\n\t\"./sw.js\": \"./node_modules/moment/locale/sw.js\",\n\t\"./ta\": \"./node_modules/moment/locale/ta.js\",\n\t\"./ta.js\": \"./node_modules/moment/locale/ta.js\",\n\t\"./te\": \"./node_modules/moment/locale/te.js\",\n\t\"./te.js\": \"./node_modules/moment/locale/te.js\",\n\t\"./tet\": \"./node_modules/moment/locale/tet.js\",\n\t\"./tet.js\": \"./node_modules/moment/locale/tet.js\",\n\t\"./tg\": \"./node_modules/moment/locale/tg.js\",\n\t\"./tg.js\": \"./node_modules/moment/locale/tg.js\",\n\t\"./th\": \"./node_modules/moment/locale/th.js\",\n\t\"./th.js\": \"./node_modules/moment/locale/th.js\",\n\t\"./tl-ph\": \"./node_modules/moment/locale/tl-ph.js\",\n\t\"./tl-ph.js\": \"./node_modules/moment/locale/tl-ph.js\",\n\t\"./tlh\": \"./node_modules/moment/locale/tlh.js\",\n\t\"./tlh.js\": \"./node_modules/moment/locale/tlh.js\",\n\t\"./tr\": \"./node_modules/moment/locale/tr.js\",\n\t\"./tr.js\": \"./node_modules/moment/locale/tr.js\",\n\t\"./tzl\": \"./node_modules/moment/locale/tzl.js\",\n\t\"./tzl.js\": \"./node_modules/moment/locale/tzl.js\",\n\t\"./tzm\": \"./node_modules/moment/locale/tzm.js\",\n\t\"./tzm-latn\": \"./node_modules/moment/locale/tzm-latn.js\",\n\t\"./tzm-latn.js\": \"./node_modules/moment/locale/tzm-latn.js\",\n\t\"./tzm.js\": \"./node_modules/moment/locale/tzm.js\",\n\t\"./ug-cn\": \"./node_modules/moment/locale/ug-cn.js\",\n\t\"./ug-cn.js\": \"./node_modules/moment/locale/ug-cn.js\",\n\t\"./uk\": \"./node_modules/moment/locale/uk.js\",\n\t\"./uk.js\": \"./node_modules/moment/locale/uk.js\",\n\t\"./ur\": \"./node_modules/moment/locale/ur.js\",\n\t\"./ur.js\": \"./node_modules/moment/locale/ur.js\",\n\t\"./uz\": \"./node_modules/moment/locale/uz.js\",\n\t\"./uz-latn\": \"./node_modules/moment/locale/uz-latn.js\",\n\t\"./uz-latn.js\": \"./node_modules/moment/locale/uz-latn.js\",\n\t\"./uz.js\": \"./node_modules/moment/locale/uz.js\",\n\t\"./vi\": \"./node_modules/moment/locale/vi.js\",\n\t\"./vi.js\": \"./node_modules/moment/locale/vi.js\",\n\t\"./x-pseudo\": \"./node_modules/moment/locale/x-pseudo.js\",\n\t\"./x-pseudo.js\": \"./node_modules/moment/locale/x-pseudo.js\",\n\t\"./yo\": \"./node_modules/moment/locale/yo.js\",\n\t\"./yo.js\": \"./node_modules/moment/locale/yo.js\",\n\t\"./zh-cn\": \"./node_modules/moment/locale/zh-cn.js\",\n\t\"./zh-cn.js\": \"./node_modules/moment/locale/zh-cn.js\",\n\t\"./zh-hk\": \"./node_modules/moment/locale/zh-hk.js\",\n\t\"./zh-hk.js\": \"./node_modules/moment/locale/zh-hk.js\",\n\t\"./zh-mo\": \"./node_modules/moment/locale/zh-mo.js\",\n\t\"./zh-mo.js\": \"./node_modules/moment/locale/zh-mo.js\",\n\t\"./zh-tw\": \"./node_modules/moment/locale/zh-tw.js\",\n\t\"./zh-tw.js\": \"./node_modules/moment/locale/zh-tw.js\"\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = \"./node_modules/moment/locale sync recursive ^\\\\.\\\\/.*$\";","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  post = {\n    title : \"Title\",\n    isFavorite: true\n  }\n}\n","<!-- <hr>\n<div class=\"row\">\n  <div class=\"col-md-6\">\n    <app-covid-status></app-covid-status>\n  </div>\n</div>\n<app-author-list></app-author-list> -->\n<body>\n  <div class=\"container-fluid\">\n    <!-- <app-signup></app-signup> -->\n    <!-- <div class=\"row\">\n      <div class=\"col-md-4\">\n        <app-reset-password></app-reset-password>\n      </div> -->\n      <app-posts></app-posts>\n    <!-- </div> -->\n  </div>\n</body>\n\n\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule, ErrorHandler } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms'\nimport { HttpClientModule } from '@angular/common/http'\nimport { ChartsModule } from 'ng2-charts';\nimport { RouterModule } from '@angular/router';\n\nimport { AppComponent } from './app.component';\nimport { AuthorListComponent } from './author-list/author-list.component';\nimport { AuthorService } from './services/author.service';\nimport { CovidStatusComponent } from './covid-status/covid-status.component';\nimport { CovidService } from './http-services/posts/services/covid.service';\nimport { AuthorDetailComponent } from './author-list/author-detail/author-detail.component';\nimport { PanelComponent } from './author-list/panel/panel.component';\nimport { InputFormatDirective } from './input-format.directive';\nimport { ConactFormComponent } from './conact-form/conact-form.component';\nimport { CourseComponent } from './course/course.component';\nimport { SignupComponent } from './signup/signup.component';\nimport { FormArrayComponent } from './form-array/form-array.component';\nimport { FormBuilderComponent } from './form-builder/form-builder.component';\nimport { ResetPasswordComponent } from './reset-password/reset-password.component';\nimport { PostsComponent } from './http-services/posts/posts.component';\nimport { CountPanelComponent } from './http-services/posts/count-panel/count-panel.component';\nimport { FilterStatesPipe } from './app/pipes/filter-states.pipe';\nimport { OrderStatesPipe } from './app/pipes/order-states.pipe';\nimport { AppErrorHandler } from './http-services/Errors/app-error-handler';\nimport { DataService } from './http-services/posts/services/data.service';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    AuthorListComponent,\n    CovidStatusComponent,\n    AuthorDetailComponent,\n    PanelComponent,\n    InputFormatDirective,\n    ConactFormComponent,\n    CourseComponent,\n    SignupComponent,\n    FormArrayComponent,\n    FormBuilderComponent,\n    ResetPasswordComponent,\n    PostsComponent,\n    CountPanelComponent,\n    FilterStatesPipe,\n    OrderStatesPipe\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    ReactiveFormsModule,\n    HttpClientModule,\n    ChartsModule,\n    RouterModule.forRoot([\n      { path : '', component : PostsComponent}\n    ])\n  ],\n  providers: [\n    AuthorService, \n    CovidService,\n    { provide : ErrorHandler, useClass : AppErrorHandler }\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'filterStates'\n})\nexport class FilterStatesPipe implements PipeTransform {\n\n  transform(states: any[], filter: any): any {\n    if (!states || !filter)\n      return states;\n    \n    return states.filter(state => state.stateCode == filter.stateCode);\n  }\n\n}\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { State } from 'src/app/models/status.model';\n\n@Pipe({\n  name: 'orderBy'\n})\nexport class OrderStatesPipe implements PipeTransform {\n\n  transform(states: State[], filter?: any): State[] {\n    var _states : State[] = states;\n    if(!states)\n     return null;\n    \n     _states.sort((a, b) : number => {\n       switch (filter) {\n        case 'asc':\n          if (a.stateName < b.stateName)\n            return -1;\n          if (a.stateName > b.stateName)\n            return 1;\n          return 0;\n        case 'desc':\n          if (a.stateName < b.stateName)\n            return 1;\n          if (a.stateName > b.stateName)\n            return -1;\n          return 0;\n       \n         default:\n           break;\n       }      \n    });\n\n    return _states;\n  }\n\n}\n","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\nimport { Author } from 'src/app/models/author.model';\n\n@Component({\n  selector: 'app-author-detail',\n  templateUrl: './author-detail.component.html',\n  styleUrls: ['./author-detail.component.css']\n})\nexport class AuthorDetailComponent implements OnInit {\n  @Input() author: Author;\n  @Output() change = new EventEmitter();\n\n  courses = [];\n \n  constructor() { \n  }\n\n  ngOnInit(): void {\n  }\n\n  onClick(){\n    this.change.emit({ name : this.author.authorName});\n  }\n}\n","<!-- <h3><a href=\"#\" (click) = \"onClick()\">{{ author.authorName }}</a> </h3>\n        <span><img [src]=\"author.imgPath\" alt=\"\" class=\"float-right\" style=\"max-height: 50px;\"></span>\n        <label for=\"author.phone\">Contact : {{ author.phone }}, </label>\n        <label for=\"author.dob\">DOB : {{ author.dob }}</label> -->\n\n<div class=\"panel panel-success\">\n    <div class=\"panel-heading\">\n        <h3 class=\"panel-title\">{{ author.authorName }}</h3>\n    </div>\n    <div class=\"panel-body\">\n        <span><img [src]=\"author.imgPath\" alt=\"\" class=\"float-right\" style=\"max-height: 50px;\"></span>\n        <label for=\"author.phone\">Contact : {{ author.phone }}, </label>\n        <label for=\"author.dob\">DOB : {{ author.dob }}</label>\n    </div>\n</div>            \n\n<!-- <div *ngIf= \"courses.length > 0; else noCourses\"> \n    Courses available\n</div>\n<ng-template #noCourses>\n    No Course available\n</ng-template> -->\n\n<!-- <div *ngIf= \"courses.length > 0; then courseList else noCourses\"></div>\n<ng-template #courseList>\n    Courses available\n</ng-template>\n<ng-template #noCourses>\n    No Course available\n</ng-template> -->\n\n<div [hidden] = \"courses.length == 0\">\n    Courses available.\n</div>\n<div [hidden] = \"courses.length > 0\">\n    No courses available.\n</div>\n\n","import { Component, OnInit } from '@angular/core';\nimport { Author } from '../models/author.model';\nimport { AuthorService } from '../services/author.service';\n\n@Component({\n  selector: 'app-author-list',\n  templateUrl: './author-list.component.html',\n  styleUrls: ['./author-list.component.css']\n})\nexport class AuthorListComponent implements OnInit {\n  authors: Author[];\n  viewMode = \"map\";\n\n  constructor(authorService: AuthorService) {\n    this.authors = authorService.getAuthors();\n   }\n\n  ngOnInit(): void {\n  }\n\n  onAuthorChange(eventArgs){\n    console.log(\"logged - \", eventArgs.name);\n  }\n\n  changeViewMode(mode: string){\n    this.viewMode = mode;\n  }\n}\n","<div class=\"row\">\n    <div class=\"col-md-6\">\n      <h1>Authors</h1>\n    </div>\n  </div>\n  <div class=\"row\">\n    <div class=\"col-md-6\">\n      <app-author-detail \n        *ngFor = \"let author of authors\" \n        [author] = \"author\"\n        (change) = \"onAuthorChange($event)\">\n      </app-author-detail>\n      <!-- <ul class=\"list-group\">\n        <li \n            class=\"list-group-item\" \n            *ngFor = \"let author of authors\">\n            {{ author.authorName }}\n            <span><img [src]=\"author.imgPath\" alt=\"\" class=\"float-right\" style=\"max-height: 50px;\"></span>\n        </li>\n      </ul> -->\n    </div>\n  </div>\n<hr> \n\n<ul class=\"nav nav-pills\">\n  <li role=\"presentation\" [class.active] = \"viewMode == 'map'\"><a (click) = \"changeViewMode('map')\">Map View</a></li>\n  <li role=\"presentation\" [class.active] = \"viewMode == 'list'\"><a (click) = \"changeViewMode('list')\">List View</a></li>\n</ul>\n<div [ngSwitch] = \"viewMode\">\n  <div *ngSwitchCase = \"'map'\">Map view content</div>\n  <div *ngSwitchCase = \"'list'\">List view content</div>\n  <div *ngSwitchDefault>No content</div>\n</div>\n\n<hr>\n<input type=\"text\" name=\"\" id=\"username\" appInputFormat [format] = \"'uppercase'\">\n<hr>\n  <app-panel>\n    <ng-container class=\"heading\">\n      <h2>Heading</h2>\n    </ng-container>\n    <div class=\"card-body\">\n      <h3>Body</h3>\n      <p>Some text here..</p>\n    </div>\n  </app-panel>\n\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-panel',\n  templateUrl: './panel.component.html',\n  styleUrls: ['./panel.component.css']\n})\nexport class PanelComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"card card-primary\">\n    <div class=\"card-header\">\n        <!-- <h3 class=\"card-title\">Panel title</h3> -->\n        <ng-content select=\".heading\"></ng-content>\n      </div>\n      <!-- <div class=\"card-body\">\n        Panel content\n      </div> -->\n      <ng-content select = \".card-body\"></ng-content>\n</div>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-conact-form',\n  templateUrl: './conact-form.component.html',\n  styleUrls: ['./conact-form.component.css']\n})\nexport class ConactFormComponent implements OnInit {\n\n  contactMethods = [\n    { id: 1, name: \"Email\"},\n    { id: 2, name: \"Phone\"}\n  ];\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n  log(firstName){\n    console.log(firstName);\n  }\n\n  onSubmit(form){\n    console.log(form);\n  }\n\n}\n","<form ngForm #f = \"ngForm\" (submit) = \"onSubmit(f)\">\n    <div ngModelGroup = \"contact\" #contact = \"ngModelGroup\">\n        <div *ngIf = \"!contact.valid\">...</div>\n        <div class=\"form-group\">\n            <label for=\"firstName\">First Name</label>\n            <input \n            required \n            minlength=\"3\" \n            ngModel \n            name=\"firstName\" \n            id=\"firstName\" \n            #firstName = \"ngModel\" \n            type=\"text\" \n            class=\"form-control\">\n            <div \n                class=\"alert alert-danger\" \n                *ngIf = \"firstName.touched && !firstName.valid\">\n                <div *ngIf = \"firstName.errors.required\">First Name is required.</div>\n                <div *ngIf = \"firstName.errors.minlength\">Minimum length should be 3</div>\n            </div>\n        </div>\n    </div> \n    <div class=\"form-group\">\n        <label for=\"comment\">Comment</label>\n        <textarea ngModel name=\"comment\" id=\"comment\" class=\"form-control\" cols=\"30\" rows=\"10\"></textarea>\n    </div>   \n    <div class=\"checkbox\">\n        <label>\n            <input type=\"checkbox\" ngModel name = \"isSubscribed\"> Subscribe \n        </label>\n    </div>\n    <div class=\"form-group\">\n        <label for=\"contactMethod\"> Contact Method\n            <select multiple ngModel name=\"contactMethod\" id=\"contactMethod\" class=\"form-control\">\n                <option value=\"\">--select--</option>\n                <option *ngFor = \"let method of contactMethods\"  [ngValue] =\"method\">{{ method.name }}</option>\n            </select>\n        </label>\n    </div>\n    <div class=\"radio\" *ngFor = \"let method of contactMethods\">\n        <label for=\"communicateMethod\">\n            <input ngModel type=\"radio\" name=\"communicateMethod\" [value]=\"method\"> {{ method.name }}\n        </label>\n    </div>\n    <p>{{ f.value | json}}</p>\n    <button class=\"btn btn-primary\" [disabled] = \"!f.valid\">Submit</button>\n</form>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-course',\n  templateUrl: './course.component.html',\n  styleUrls: ['./course.component.css']\n})\nexport class CourseComponent implements OnInit {\n\n  categories = [\n    { id : 1, name : \"Development\" },\n    { id : 2, name : \"Art\" },\n    { id : 3, name : \"Languages\" }\n  ]\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n  onChange(c){\n    console.log(c);\n  }\n\n  onSubmit(f){\n    \n  }\n\n}\n","<form ngForm #f = \"ngForm\" action=\"onSubmit(f)\">\n    <div class=\"form-group\">\n        <label for=\"courseName\">Course Name</label>\n        <input \n        required\n        minlength=\"5\"\n        type=\"text\" \n        ngModel\n        name=\"courseName\" \n        #courseName = \"ngModel\"\n        class=\"form-control\"\n        id=\"\">\n        <div \n            *ngIf = \"courseName.touched && !courseName.valid\" class=\"alert alert-danger\">\n            <div *ngIf = \"courseName.errors.required\">Course name is required.</div>\n            <div *ngIf = \"courseName.errors.minlength\">Course name should have atleast {{ courseName.errors.minlength.requiredLength }} characters.</div>\n        </div>\n    </div>\n    <div class=\"form-group\">\n        <label for=\"category\">Category\n            <select ngModel name=\"category\" id=\"\" class=\"form-control\">\n                <option value=\"\">--select--</option>\n                <option *ngFor = \"let cat of categories\" [ngValue] =\"cat\">{{ cat.name }}</option>\n            </select>\n        </label>\n    </div>\n    <div class=\"checkbox\">\n        <label>\n            <input type=\"checkbox\" ngModel name=\"hasGuarantee\"> 30-days money-back guarantee\n        </label>\n    </div>\n    <p>{{ f.value | json }}</p>\n    <button class=\"btn btn-primary\" [disabled] =\"!f.valid\">Save</button>\n</form>\n","import { Component, OnInit } from '@angular/core';\nimport { CovidStatus } from '../models/covid-status.model';\n\n@Component({\n  selector: 'app-covid-status',\n  templateUrl: './covid-status.component.html',\n  styleUrls: ['./covid-status.component.css']\n})\nexport class CovidStatusComponent implements OnInit {\n  status: CovidStatus[];\n  constructor() {\n    // this.status = authorService.getCovidStatus();\n   }\n\n  ngOnInit(): void {\n  }\n\n}\n","<table class=\"table table-bordered table-dark\">\n    <thead>\n        <tr>\n            <th scope=\"col\">#</th>\n            <th scope=\"col\">District</th>\n            <th scope=\"col\">Total Cases</th>\n        </tr>\n    </thead>\n    <tbody>\n        <tr *ngFor = \"let st of status; let i = index\">\n            <th scope=\"row\">{{ i + 1 }}</th>\n            <td>{{st.district.name}}</td>\n            <td>{{st.total}}</td>\n        </tr>\n    </tbody>\n</table>\n","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormArray, FormControl } from '@angular/forms';\n\n@Component({\n  selector: 'app-form-array',\n  templateUrl: './form-array.component.html',\n  styleUrls: ['./form-array.component.css']\n})\nexport class FormArrayComponent {\n\n  constructor() { }\n\n  form = new FormGroup({\n    topics : new FormArray([])\n  });\n\n  addTopic(topic : HTMLInputElement){\n    (this.topics as FormArray).push(new FormControl(topic.value));\n    topic.value = '';\n    console.log(this.topics);\n  }\n\n  removeTopic(topic : FormControl){\n    console.log(topic);\n    let index =  this.topics.controls.indexOf(topic);\n    console.log(index);\n    this.topics.removeAt(index);\n  }\n\n  get topics(){\n    return this.form.get('topics') as FormArray;\n  }\n}\n","<form>\n    <input \n        type=\"text\" \n        class=\"form-control\"\n        (keyup.enter) = \"addTopic(topic)\" #topic>\n        <ul class=\"list-group\">\n            <li *ngFor = \"let control of topics.controls\"\n                class=\"list-group-item\"\n                (click) = \"removeTopic(control)\">\n                {{ control.value }}\n            </li>\n        </ul>        \n</form>\n","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, Validators } from '@angular/forms';\n\n@Component({\n  selector: 'app-form-builder',\n  templateUrl: './form-builder.component.html',\n  styleUrls: ['./form-builder.component.css']\n})\nexport class FormBuilderComponent implements OnInit {\n\n  form;\n  \n  constructor(fb: FormBuilder) {\n    this.form = fb.group({\n      name:['', Validators.required],\n      contact : fb.group({\n        email: [],\n        phone: []\n      }),\n      topics: fb.array([])\n    });\n   }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>form-builder works!</p>\n","export class AppError{\r\n    constructor(public originalError? : any){}\r\n\r\n}","import { ErrorHandler } from '@angular/core';\r\n\r\nexport class AppErrorHandler implements ErrorHandler{\r\n    handleError(error: any): void {\r\n        alert('an unexpected error occured.');\r\n    }\r\n    \r\n}","import { AppError } from './AppError';\r\n\r\nexport class NotFoundError extends AppError{\r\n    \r\n}","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-count-panel',\n  templateUrl: './count-panel.component.html',\n  styleUrls: ['./count-panel.component.css']\n})\nexport class CountPanelComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"card card-primary\">\n    <div class=\"card-header\">\n        <ng-content select=\".heading\"></ng-content>\n    </div>  \n    <div class=\"card-body\">\n        <ng-content select = \".body\"></ng-content>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Status, NewCase, StateStatus, State, District, Nation } from 'src/app/models/status.model';\nimport { CovidService } from './services/covid.service';\nimport { AppError } from '../Errors/AppError';\nimport { NotFoundError } from '../Errors/not-found-error';\n\n@Component({\n  selector: 'app-posts',\n  templateUrl: './posts.component.html',\n  styleUrls: ['./posts.component.css']\n})\nexport class PostsComponent implements OnInit {\n\n  states;\n  districts: District[];\n  totalStatus : Status;\n  viewMode = \"total\";\n  mainViewMode = \"india\";\n  consolidatedViewMode = 'india-total';\n  nationStatus : Nation;\n  stateSelected : State; \n\n  constructor(private covidService : CovidService) {\n    \n   }\n\n  ngOnInit(): void {\n    this.covidService.getConsolidateData()\n      .subscribe(response => {\n        console.log(response);\n        this.nationStatus = response;\n      },\n      (error : AppError) => {\n        if(error instanceof NotFoundError)\n          console.log(error);\n        else\n          throw error;\n      })\n  }\n\n  getStateStatus(stateCode : string){\n    this.stateSelected = this.nationStatus.states.find(x => x.stateCode === stateCode);\n    console.log(this.stateSelected);\n    this.stateSelected.districts.sort((a, b): number => this.getSorted(a, b));\n    this.totalStatus = {\n      active : this.getTotalActiveCases(),\n      deceased : this.getTotalDeceasedCases(),\n      recovered : this.getTotalRecoveredCases(),\n      total : this.getTotalCases()\n    };\n  }  \n\n  getSorted(a, b){\n    if (a.status.total < b.status.total) return 1;\n    if (a.status.total > b.status.total) return -1;\n    return 0;\n  }\n\n  getConsolidatedDataSorted(a, b){\n    if (a.status.total < b.status.total) return 1;\n    if (a.status.total > b.status.total) return -1;\n    return 0;\n  }\n\n  getTotalCases(): number{\n    var total = 0;\n    if(this.stateSelected.districts != null && this.stateSelected.districts.length > 0){\n      this.stateSelected.districts.forEach(x => total += x.status.total);\n    }\n    return total;\n  }\n\n  getTotalActiveCases(): number{\n    var total = 0;\n    if(this.stateSelected.districts != null && this.stateSelected.districts.length > 0){\n      this.stateSelected.districts.forEach(x => total += x.status.active);\n    }\n    console.log(total);\n    return total;\n  }\n\n  getTotalRecoveredCases(): number{\n    var total = 0;\n    if(this.stateSelected.districts != null && this.stateSelected.districts.length > 0){\n      this.stateSelected.districts.forEach(x => total += x.status.recovered);\n    }\n    console.log(total);\n    return total;\n  }\n\n  getTotalDeceasedCases(): number{\n    var total = 0;\n    if(this.stateSelected.districts != null && this.stateSelected.districts.length > 0){\n      this.stateSelected.districts.forEach(x => total += x.status.deceased);\n    }\n    return total;\n  }\n\n  getTodayConfirmedCases() : number{\n    var total = 0;\n    if(this.stateSelected.districts != null && this.stateSelected.districts.length > 0){\n      this.stateSelected.districts.forEach(x => total += x.newStatus.confirmed);\n    }\n    return total;\n  }\n\n  getTodayDeceasedCases() : number{\n    var total = 0;\n    if(this.stateSelected.districts != null && this.stateSelected.districts.length > 0){\n      this.stateSelected.districts.forEach(x => total += x.newStatus.deceased);\n    }\n    return total;\n  }\n\n  getTodayRecoveredCases() : number{\n    var total = 0;\n    if(this.stateSelected.districts != null && this.stateSelected.districts.length > 0){\n      this.stateSelected.districts.forEach(x => total += x.newStatus.recovered);\n    }\n    return total;\n  }\n\n  changeViewMode(mode : string){\n    this.viewMode = mode;\n  }\n\n  changeMainViewMode(mode : string){\n    this.mainViewMode = mode;\n    if(mode === 'state'){\n      this.getStateStatus('KL');\n    }\n  }\n\n  changeMainDayMode(mode : string){\n    this.consolidatedViewMode = mode;\n  }\n}\n\n\n","<header>   \n    <ul class=\"nav nav-tabs\">\n        <li \n            class=\"nav-item\">\n            <a \n                href=\"#\" \n                class=\"nav-link\" \n                [class.active] = \"mainViewMode == 'india'\"\n                (click) = \"changeMainViewMode('india')\">\n                <b><h4>All India</h4></b>\n            </a>\n        </li>\n        <li \n            class=\"nav-item\">\n            <a \n                href=\"#\" \n                class=\"nav-link\" \n                [class.active] = \"mainViewMode == 'state'\"\n                (click) = \"changeMainViewMode('state')\">\n                <b><h3>States</h3></b> \n            </a>\n        </li> \n    </ul>\n</header>\n<hr>\n<div [ngSwitch] = \"mainViewMode\">\n    <div *ngSwitchCase = \"'state'\">\n        <div class=\"row\">\n            <div class=\"col-md-6\">\n                <h2>Data from {{ stateSelected.stateName }} State</h2>\n            </div>\n        </div>\n        <hr>\n        <div [ngSwitch] = \"viewMode\">\n            <div *ngSwitchCase = \"'total'\" class=\"row\">\n                <div class=\"col-md-3\">\n                    <app-count-panel>\n                        <ng-container class=\"heading\">\n                            <h3 class=\"text-center\">Total Confirmed</h3>\n                        </ng-container>\n                        <ng-container class=\"body\">\n                            <h4 class=\"text-center\">{{ totalStatus?.total }}</h4>\n                        </ng-container>\n                    </app-count-panel>\n                </div>\n                <div class=\"col-md-3\">\n                    <app-count-panel>\n                        <ng-container class=\"heading\">\n                            <h3 class=\"text-center\">Active</h3>\n                        </ng-container>\n                        <ng-container class=\"body\">\n                            <h4 class=\"text-center\">{{ totalStatus?.active }}</h4>\n                        </ng-container>\n                    </app-count-panel>\n                </div>\n                <div class=\"col-md-3\">\n                    <app-count-panel>\n                        <ng-container class=\"heading\">\n                            <h3 class=\"text-center\">Deceased</h3>\n                        </ng-container>\n                        <ng-container class=\"body\">\n                            <h4 class=\"text-center\">{{ totalStatus?.deceased }}</h4>\n                        </ng-container>\n                    </app-count-panel>\n                </div>\n                <div class=\"col-md-3\">\n                    <app-count-panel>\n                        <ng-container class=\"heading\">\n                            <h3 class=\"text-center\">Recovered</h3>\n                        </ng-container>\n                        <ng-container class=\"body\">\n                            <h4 class=\"text-center\">{{ totalStatus?.recovered }}</h4>\n                        </ng-container>\n                    </app-count-panel>\n                </div>\n            </div>\n            <div *ngSwitchCase = \"'today'\" class=\"row\">                \n                <div class=\"col-md-4\">\n                    <app-count-panel>\n                        <ng-container class=\"heading\">\n                            <h3 class=\"text-center\">Active</h3>\n                        </ng-container>\n                        <ng-container class=\"body\">\n                            <h4 class=\"text-center\">{{ stateSelected?.newStatus.total }}</h4>\n                        </ng-container>\n                    </app-count-panel>\n                </div>\n                <div class=\"col-md-4\">\n                    <app-count-panel>\n                        <ng-container class=\"heading\">\n                            <h3 class=\"text-center\">Deceased</h3>\n                        </ng-container>\n                        <ng-container class=\"body\">\n                            <h4 class=\"text-center\">{{ stateSelected?.newStatus.deceased }}</h4>\n                        </ng-container>\n                    </app-count-panel>\n                </div>\n                <div class=\"col-md-4\">\n                    <app-count-panel>\n                        <ng-container class=\"heading\">\n                            <h3 class=\"text-center\">Recovered</h3>\n                        </ng-container>\n                        <ng-container class=\"body\">\n                            <h4 class=\"text-center\">{{ stateSelected?.newStatus.recovered }}</h4>\n                        </ng-container>\n                    </app-count-panel>\n                </div>\n            </div>\n        </div>        \n        <hr>\n        \n        <ul class=\"nav nav-tabs\">\n            <li \n                class=\"nav-item\">\n                <a \n                    href=\"#\" \n                    class=\"nav-link\" \n                    [class.active] = \"viewMode == 'total'\"\n                    (click) = \"changeViewMode('total')\">\n                    <b><h3>Total Cases</h3></b> \n                </a>\n            </li>\n            <li \n                class=\"nav-item\">\n                <a \n                    href=\"#\" \n                    class=\"nav-link\" \n                    [class.active] = \"viewMode == 'today'\"\n                    (click) = \"changeViewMode('today')\">\n                    <b><h3>Today Cases</h3></b>\n                </a>\n            </li>\n            <div class=\"d-flex flex-row-reverse\">\n                <li class=\"nav-item dropdown p-2\">\n                    <a \n                        class=\"nav-link dropdown-toggle\" \n                        data-toggle=\"dropdown\" \n                        href=\"#\" \n                        role=\"button\" \n                        aria-haspopup=\"true\" \n                        aria-expanded=\"false\">\n                        All States\n                    </a>\n                    <div class=\"dropdown-menu\">\n                      <a \n                        *ngFor = \"let state of nationStatus?.states | orderBy : 'asc'\"\n                        class=\"dropdown-item\" \n                        href=\"#\"\n                        (click) = \"getStateStatus(state.stateCode)\">\n                        {{ state.stateName}}\n                      </a>\n                    </div>\n                </li>\n            </div>\n            \n        </ul>\n        <hr>\n        <div [ngSwitch] =\"viewMode\">\n            <div *ngSwitchCase = \"'total'\">\n                <table class=\"table table-striped table-bordered table-hover\">\n                    <thead>\n                        <tr>\n                            <th scope=\"colgroup\" class=\"text-center\">#</th>\n                            <th scope=\"col\" class=\"text-center\">District</th>\n                            <th scope=\"col\" class=\"text-center\">Total Confirmed</th>\n                            <th scope=\"col\" class=\"text-center\">Active</th>\n                            <th scope=\"col\" class=\"text-center\">Deceased</th>\n                            <th scope=\"col\" class=\"text-center\">Recovered</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        <tr *ngFor = \"let district of stateSelected.districts; let i = index\">\n                            <th class=\"text-center\" scope=\"row\">{{ i + 1}}</th>\n                            <td>{{ district.districtName }}</td>\n                            <td class=\"text-center\">{{ district.status.total }}</td>\n                            <td class=\"text-center\">{{ district.status.active }}</td>\n                            <td \n                                class=\"text-center\"\n                                [ngStyle] = \"{'color' : district.status.deceased > 0 ? 'red' : 'black', 'font-weight' : district.status.deceased > 0 ? 'bold' : 'normal' }\">\n                                {{ district.status.deceased }}\n                            </td>\n                            <td \n                                class=\"text-center\" \n                                [ngStyle] = \"{'color' : district.status.recovered > 0 ? 'green' : 'black', 'font-weight' : 'bold' }\">\n                                {{ district.status.recovered }}\n                            </td>\n                        </tr>\n                    </tbody>\n                </table>\n            </div>\n            <div *ngSwitchCase = \"'today'\"> \n                <table class=\"table table-striped table-bordered table-hover\">\n                    <thead>\n                        <tr>\n                            <th scope=\"colgroup\" class=\"text-center\">#</th>\n                            <th scope=\"col\" class=\"text-center\">District</th>\n                            <th scope=\"col\" class=\"text-center\">Confirmed</th>\n                            <th scope=\"col\" class=\"text-center\">Deceased</th>\n                            <th scope=\"col\" class=\"text-center\">Recovered</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        <tr *ngFor = \"let district of stateSelected.districts; let i = index\">\n                            <th class=\"text-center\" scope=\"row\">{{ i + 1}}</th>\n                            <td>{{ district.districtName }}</td>\n                            <td class=\"text-center\">{{ district.newStatus.confirmed }}</td>\n                            <td \n                                class=\"text-center\"\n                                [ngStyle] = \"{'color' : district.newStatus.deceased > 0 ? 'red' : 'black', 'font-weight' : district.newStatus.deceased > 0 ? 'bold' : 'normal' }\">\n                                {{ district.newStatus.deceased }}\n                            </td>\n                            <td class=\"text-center\" [ngStyle] = \"{'color' : district.newStatus.recovered > 0 ? 'green' : 'black', 'font-weight' : 'bold' }\">{{ district.newStatus.recovered }}</td>\n                        </tr>\n                    </tbody>\n                </table>\n            </div>\n        </div>        \n    </div>\n    <div *ngSwitchCase = \"'india'\">\n        <div [ngSwitch] =\"consolidatedViewMode\">\n            <div *ngSwitchCase = \"'india-total'\">\n                <div class=\"row\">\n                    <div class=\"col-md-3\">\n                        <app-count-panel>\n                            <ng-container class=\"heading\">\n                                <h3 class=\"text-center\">Total Confirmed</h3>\n                            </ng-container>\n                            <ng-container class=\"body\">\n                                <h4 class=\"text-center\">{{ nationStatus?.status.total }}</h4>\n                            </ng-container>\n                        </app-count-panel>\n                    </div>\n                    <div class=\"col-md-3\">\n                        <app-count-panel>\n                            <ng-container class=\"heading\">\n                                <h3 class=\"text-center\">Active</h3>\n                            </ng-container>\n                            <ng-container class=\"body\">\n                                <h4 class=\"text-center\">{{ nationStatus?.status.active }}</h4>\n                            </ng-container>\n                        </app-count-panel>\n                    </div>\n                    <div class=\"col-md-3\">\n                        <app-count-panel>\n                            <ng-container class=\"heading\">\n                                <h3 class=\"text-center\">Deceased</h3>\n                            </ng-container>\n                            <ng-container class=\"body\">\n                                <h4 class=\"text-center\">{{ nationStatus?.status.deceased }}</h4>\n                            </ng-container>\n                        </app-count-panel>\n                    </div>\n                    <div class=\"col-md-3\">\n                        <app-count-panel>\n                            <ng-container class=\"heading\">\n                                <h3 class=\"text-center\">Recovered</h3>\n                            </ng-container>\n                            <ng-container class=\"body\">\n                                <h4 class=\"text-center\">{{ nationStatus?.status.recovered }}</h4>\n                            </ng-container>\n                        </app-count-panel>\n                    </div>\n                </div>\n            </div>\n            <div *ngSwitchCase = \"'india-today'\">\n                <div class=\"row\">                    \n                    <div class=\"col-md-4\">\n                        <app-count-panel>\n                            <ng-container class=\"heading\">\n                                <h3 class=\"text-center\">Active</h3>\n                            </ng-container>\n                            <ng-container class=\"body\">\n                                <h4 class=\"text-center\">{{ nationStatus?.newCase?.confirmed }}</h4>\n                            </ng-container>\n                        </app-count-panel>\n                    </div>\n                    <div class=\"col-md-4\">\n                        <app-count-panel>\n                            <ng-container class=\"heading\">\n                                <h3 class=\"text-center\">Deceased</h3>\n                            </ng-container>\n                            <ng-container class=\"body\">\n                                <h4 class=\"text-center\">{{ nationStatus?.newCase.deceased }}</h4>\n                            </ng-container>\n                        </app-count-panel>\n                    </div>\n                    <div class=\"col-md-4\">\n                        <app-count-panel>\n                            <ng-container class=\"heading\">\n                                <h3 class=\"text-center\">Recovered</h3>\n                            </ng-container>\n                            <ng-container class=\"body\">\n                                <h4 class=\"text-center\">{{ nationStatus?.newCase.recovered }}</h4>\n                            </ng-container>\n                        </app-count-panel>\n                    </div>\n                </div>\n            </div>\n        </div>        \n        <hr>\n\n        <ul class=\"nav nav-tabs\">\n            <li \n                class=\"nav-item\">\n                <a \n                    href=\"#\" \n                    class=\"nav-link\" \n                    [class.active] = \"consolidatedViewMode == 'india-total'\"\n                    (click) = \"changeMainDayMode('india-total')\">\n                    <b><h3>Total</h3></b> \n                </a>\n            </li>\n            <li \n                class=\"nav-item\">\n                <a \n                    href=\"#\" \n                    class=\"nav-link\" \n                    [class.active] = \"consolidatedViewMode == 'india-today'\"\n                    (click) = \"changeMainDayMode('india-today')\">\n                    <b><h3>Today</h3></b>\n                </a>\n            </li>\n        </ul>\n        <hr>\n        <div [ngSwitch] =\"consolidatedViewMode\">\n            <div *ngSwitchCase = \"'india-total'\">\n                <table class=\"table table-striped table-bordered table-hover\">\n                    <thead>\n                        <tr>\n                            <th scope=\"colgroup\" class=\"text-center\">#</th>\n                            <th scope=\"col\" class=\"text-center\">State</th>\n                            <th scope=\"col\" class=\"text-center\">Total Confirmed</th>\n                            <th scope=\"col\" class=\"text-center\">Active</th>\n                            <th scope=\"col\" class=\"text-center\">Deceased</th>\n                            <th scope=\"col\" class=\"text-center\">Recovered</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        <tr *ngFor = \"let state of nationStatus?.states; let i = index\">\n                            <th class=\"text-center\" scope=\"row\">{{ i + 1}}</th>\n                            <td>{{ state.stateName }}</td>\n                            <td class=\"text-center\">{{ state.status.total }}</td>\n                            <td class=\"text-center\">{{ state.status.active }}</td>\n                            <td \n                                class=\"text-center\"\n                                [ngStyle] = \"{'color' : state.status.deceased > 0 ? 'red' : 'black', 'font-weight' : state.status.deceased > 0 ? 'bold' : 'normal' }\">\n                                {{ state.status.deceased }}\n                            </td>\n                            <td class=\"text-center\" [ngStyle] = \"{'color' : state.status.recovered > 0 ? 'green' : 'black', 'font-weight' : 'bold' }\">{{ state.status.recovered }}</td>\n                        </tr>\n                    </tbody>\n                </table>\n            </div>\n            <div *ngSwitchCase = \"'india-today'\"> \n                <table class=\"table table-striped table-bordered table-hover\">\n                    <thead>\n                        <tr>\n                            <th scope=\"colgroup\" class=\"text-center\">#</th>\n                            <th scope=\"col\" class=\"text-center\">State</th>\n                            <th scope=\"col\" class=\"text-center\">Confirmed</th>\n                            <th scope=\"col\" class=\"text-center\">Deceased</th>\n                            <th scope=\"col\" class=\"text-center\">Recovered</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        <tr *ngFor = \"let state of nationStatus?.states; let i = index\">\n                            <th class=\"text-center\" scope=\"row\">{{ i + 1}}</th>\n                            <td>{{ state.stateName }}</td>\n                            <td class=\"text-center\">{{ state.newStatus.total }}</td>\n                            <td \n                                class=\"text-center\"\n                                [ngStyle] = \"{'color' : state.newStatus.deceased > 0 ? 'red' : 'black', 'font-weight' : state.newStatus.deceased > 0 ? 'bold' : 'normal' }\">\n                                {{ state.newStatus.deceased }}\n                            </td>\n                            <td class=\"text-center\" [ngStyle] = \"{'color' : state.newStatus.recovered > 0 ? 'green' : 'black', 'font-weight' : 'bold' }\">{{ state.newStatus.recovered }}</td>\n                        </tr>\n                    </tbody>\n                </table>\n            </div>\n        </div>\n    </div>\n</div>\n<!-- <pre>{{states | json}}</pre> -->","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpErrorResponse } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { Nation, State, District, Status } from 'src/app/models/status.model';\n\nimport { catchError } from 'rxjs/operators';\nimport { throwError } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { AppError } from '../../Errors/AppError';\nimport { NotFoundError } from '../../Errors/not-found-error';\nimport { DataService } from './data.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CovidService extends DataService {\n  states;\n  status : Nation;\n\n  constructor(http : HttpClient) { \n    super(http, \"https://api.covid19india.org/v2/state_district_wise.json\");\n  }\n\n  getConsolidateData () : Observable<any> {\n    var _states : State[] = [];\n    var _districts : District[] = [];\n    var districts : any[];    \n    var _ditrictNewStatus : Status = { active : 0, deceased : 0, recovered : 0, total : 0 };\n    var _stateStatus : Status = { active : 0, deceased : 0, recovered : 0, total : 0 };\n    var _nationalStatus : Status = { active : 0, deceased : 0, recovered : 0, total : 0 };\n    var _newStatus : Status = { active : 0, deceased : 0, recovered : 0, total : 0 };\n    var _nationStatus : Nation;\n    \n    return this.get() \n      .pipe(map(response =>{\n        this.states = (response as any[]);\n        this.states.forEach(state => {\n          districts = (state.districtData as any[]);\n          _stateStatus = { active : 0, deceased : 0, recovered : 0, total : 0 };\n          _ditrictNewStatus = { active : 0, deceased : 0, recovered : 0, total : 0 };\n          districts.forEach(district => {\n            _stateStatus.total += district.confirmed;\n            _stateStatus.active += district.active;\n            _stateStatus.deceased += district.deceased;\n            _stateStatus.recovered += district.recovered;\n            _nationalStatus.total += district.confirmed;\n            _nationalStatus.active += district.active;\n            _nationalStatus.deceased += district.deceased;\n            _nationalStatus.recovered += district.recovered;\n            _ditrictNewStatus.deceased += district.delta.deceased;\n            _ditrictNewStatus.recovered += district.delta.recovered;\n            _ditrictNewStatus.total += district.delta.confirmed;\n            _newStatus.deceased += district.delta.deceased;\n            _newStatus.recovered += district.delta.recovered;\n            _newStatus.active += district.delta.confirmed;\n\n            _districts.push({\n              districtName : district.district,\n              status : {\n                active : district.active,\n                deceased : district.deceased,\n                recovered : district.recovered,\n                total : district.confirmed\n              },\n              newStatus : {\n                confirmed : district.delta.confirmed,\n                deceased : district.delta.deceased,\n                recovered : district.delta.recovered\n              }\n            });\n          });\n          _states.push({\n            stateCode : state.statecode,\n            stateName : state.state,\n            status  : _stateStatus,\n            newStatus : _ditrictNewStatus,\n            districts : _districts\n          })\n          _districts = [];\n        });\n\n      _nationStatus = {\n        newCase : {\n          confirmed : _newStatus.active,\n          deceased : _newStatus.deceased,\n          recovered : _newStatus.recovered\n        },\n        states : _states,\n        status : {\n          active : _nationalStatus.active,\n          deceased : _nationalStatus.deceased,\n          recovered : _nationalStatus.recovered,\n          total : _nationalStatus.total\n        }\n      }\n      _nationStatus.states.sort((a, b): number => this.getConsolidatedDataSorted(a, b));\n      return _nationStatus;\n      }),catchError(this.errorHandler));  \n  }\n\n  getConsolidatedDataSorted(a, b){\n    if (a.status.total < b.status.total) return 1;\n    if (a.status.total > b.status.total) return -1;\n    return 0;\n  }\n\n  errorHandler(error: HttpErrorResponse) {\n    if(error.status === 404)\n      return throwError (new NotFoundError(error));\n\n    return throwError(new AppError(error));\n  }\n}\n","import { HttpClient } from '@angular/common/http';\r\n\r\nexport class DataService{\r\n    constructor(private http : HttpClient, private url : string){ }\r\n\r\n    get(){\r\n        return this.http.get(this.url);\r\n    }\r\n}","import { Directive, HostListener, ElementRef, Input } from '@angular/core';\n\n@Directive({\n  selector: '[appInputFormat]'\n})\nexport class InputFormatDirective {\n  @Input('format') format;\n  constructor(private el: ElementRef) { }\n\n  @HostListener('blur') onBlur(){\n    let value : string = this.el.nativeElement.value;\n    if(this.format == 'uppercase'){\n      this.el.nativeElement.value = value.toLowerCase();\n    }\n    else{\n      this.el.nativeElement.value = value.toUpperCase();\n    }\n  }\n\n}\n","export class Author{\r\n    constructor(\r\n        public authorName: string, \r\n        public authorId: number, \r\n        public imgPath: string,\r\n        public phone: number,\r\n        public dob: string){}\r\n}","import { AbstractControl, ValidationErrors } from '@angular/forms';\r\n\r\nexport class PasswordValidators{\r\n    static UniquePassword(control : AbstractControl) : Promise<ValidationErrors | null>{\r\n        return new Promise((resolve) => {\r\n            if(control.value != '1234')\r\n                    resolve({UniquePassword : true});\r\n                else\r\n                    resolve(null);\r\n        });\r\n    }\r\n\r\n    static MatchPassword(control : AbstractControl) : ValidationErrors | null {\r\n        let newPassword = control.get('newPassword');\r\n        let confirmPassword = control.get('confirmPassword');\r\n        console.log('confirm -', confirmPassword.value)\r\n        console.log('new -', newPassword.value)\r\n        if(confirmPassword.value !== newPassword.value)\r\n            return { matchPassword : true };\r\n        return null;\r\n    }\r\n}","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, Validators } from '@angular/forms';\nimport { PasswordValidators } from './password.validator';\n\n@Component({\n  selector: 'app-reset-password',\n  templateUrl: './reset-password.component.html',\n  styleUrls: ['./reset-password.component.css']\n})\nexport class ResetPasswordComponent{\n\n  form;\n\n  constructor(fb: FormBuilder) {\n    this.form = fb.group({\n      oldPassword : [\n        '', \n        [Validators.required],\n        [PasswordValidators.UniquePassword]\n      ],\n      newPassword : [\n        '', \n        Validators.required\n      ],\n      confirmPassword : [\n        '', \n        [\n          Validators.required\n        ]\n      ]\n    },\n    {\n      validator : PasswordValidators.MatchPassword\n    });\n   }\n\n   get oldpassword(){\n     return this.form.get('oldPassword');\n   }\n\n   get newpassword(){\n     return this.form.get('newPassword');\n   }\n\n   get confirmpassword(){\n     return this.form.get('confirmPassword');\n   }\n\n}\n","<form [formGroup] = \"form\">\n    <div class=\"form-group\">\n        <label for=\"oldpassword\">Old Password</label>\n        <input \n        type=\"password\" \n        formControlName = \"oldPassword\"\n        name  = \"oldpassword\"\n        class=\"form-control\">\n        <div *ngIf = \"oldpassword.touched && !oldpassword.valid\" class=\"alert alert-danger\">\n            <div *ngIf = \"oldpassword.errors?.required\">old password is required</div>\n            <div *ngIf = \"oldpassword.errors?.UniquePassword\">old password is incorrect</div>\n        </div>\n    </div>\n    <div class=\"form-group\">\n        <label for=\"newpassword\">New Password</label>\n        <input \n            formControlName = \"newPassword\"\n            name = \"newpassword\"\n            type=\"password\" \n            class=\"form-control\">\n        <div *ngIf = \"newpassword.touched && !newpassword.valid\" class=\"alert alert-danger\">\n            <div *ngIf = \"newpassword.errors.required\">new password is required.</div>\n        </div>\n    </div>\n    <div class=\"form-group\">\n        <label for=\"confirmpassword\">Confirm Password</label>\n        <input \n            formControlName = \"confirmPassword\"\n            name = \"confirmpassword\"\n            type=\"password\" \n            class=\"form-control\">\n        <div *ngIf = \"confirmpassword.touched && !confirmpassword.valid\" class=\"alert alert-danger\">\n            <div *ngIf = \"confirmpassword.errors.required\">confirm password is required.</div>\n            <!-- <div *ngIf = \"confirmpassword.errors.matchPassword\">confirm password is required.</div> -->\n        </div>\n        <div \n            *ngIf = \"confirmpassword.valid && form.invalid && form.errors?.matchPassword\"\n            class=\"alert alert-danger\">\n            passwords should match\n        </div>\n    </div>  \n    <button class=\"btn btn-primary\">Reset</button>\n</form>\n","import { Author } from '../models/author.model';\r\n\r\nexport class AuthorService{\r\n    getAuthors(){\r\n       let authors: Author[] = [\r\n            new Author('Arun Jose', 1, \"https://images-na.ssl-images-amazon.com/images/I/61smAVpeJGL._SL1296_.jpg\", 8593074355, \"17-01-1990\"),\r\n            new Author('Shelja Jose', 2, \"https://image.shutterstock.com/image-photo/image-sweet-baby-girl-wreath-260nw-463272494.jpg\", 8593074355, \"17-01-1990\"),\r\n            new Author('Catherine Arun', 3, \"https://i.pinimg.com/originals/e4/43/6e/e4436e9474484cafc97c168c4e0fd90e.jpg\", 8593074355, \"17-01-1990\")\r\n        ];\r\n\r\n        return authors;\r\n    }\r\n}","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormControl, Validators } from '@angular/forms'\nimport { UserNameValidators } from './username.validators';\n\n@Component({\n  selector: 'app-signup',\n  templateUrl: './signup.component.html',\n  styleUrls: ['./signup.component.css']\n})\nexport class SignupComponent implements OnInit {\n\n  // form = new FormGroup({\n  //   userName : new FormControl('', [\n  //     Validators.required, \n  //     Validators.minLength(3),\n  //     UserNameValidators.cannotContainSpace],\n  //     UserNameValidators.shouldBeUnique),\n  //   password : new FormControl('', Validators.required)\n  // });\n\n  form = new FormGroup({\n    account : new FormGroup({\n      userName : new FormControl('',Validators.required),\n      password : new FormControl('', Validators.required)\n    })\n  });\n\n  login(){\n    this.form.setErrors({\n      invalidLogin: true\n    });\n  }\n\n  get username(){\n    return this.form.get('account.userName');\n  }\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<form [formGroup] = \"form\" (ngSubmit) = \"login()\">\n    <div formGroupName = \"account\"> \n        <div class=\"form-group\">\n            <div *ngIf = \"form.errors\"  class=\"alert alert-danger\">Invalid</div>\n            <label for=\"username\">User Name</label>\n            <input \n            formControlName = \"userName\"\n            type=\"text\" \n            name=\"username\" \n            id=\"\" \n            class=\"form-control\">\n            <div *ngIf = \"username.pending\">checking....</div>\n            <div *ngIf = \"username.touched && !username.valid\" class=\"alert alert-danger\">\n                <div *ngIf = \"username.errors.required\">Username is required</div>\n                <div *ngIf = \"username.errors.minlength\">Username should have {{ username.errors.minlength.requiredLength }} characters.</div>\n                <div *ngIf = \"username.errors.cannotContainSpace\">Username cannot contain space.</div>\n                <div *ngIf = \"username.errors.shouldBeUnique\">Username exist</div>\n            </div>        \n        </div>\n        <div class=\"form-group\">\n            <label for=\"password\">Password</label>\n            <input \n            formControlName = \"password\"\n            type=\"password\" \n            name=\"password\" \n            id=\"\" \n            class=\"form-control\">\n        </div>\n    </div>\n    <button class=\"btn btn-primary\">Signup</button>\n</form>","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}